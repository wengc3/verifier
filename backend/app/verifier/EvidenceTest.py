import os, sys
from gmpy2 import mpz
sys.path.append(os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__)))))

from app.verifier.SingleTest import SingleTest
from app.verifier.TestResult import TestResult

from chvote.ElectionAuthority.CheckBallotProof import CheckBallotProof
from chvote.Types import BallotProof

class BallotProofEvidenceTest(SingleTest):
    """docstring for BallotProofEvidenceTest."""
    def __init__(self,id,title,description,key):
        SingleTest.__init__(self, id,title,description,key)

    def runTest(self,election_data,report):
        """
        >>> res = bpet.runTest({'id': 'b0466e35-4166-43b1-a5cb-d20e3029f110', 'responses': [[['1179435489186344472602896965261160123519524039692818694499036874789648930592260158578229153715301705681054886441818548289446182443179764948481162050241774566109862113263225394225592238338280320783074046411906222671296834037015448286888618222161009749818732553479541740710377485389827775267703315723202864619328510037332237049105051502956462196264404989033589641926610337854643380523547726357578633336725549745179545844421024506718304675605797046114121045780044102454793635702549618960718087014356617771687899593446591546861874543909739239124515659812553315760187798030056069298662957959311564834399419309144877671140172808082594880938624216010437380928856210268515114174342659500678365139729759628171962483415377347432398395674737755509480247185182343255815307884355298837883454922081980786604061517296687210952961557019349235048701763796219013078609701908908278618075851929938850164883121100461000272655530112700711924008022'], [['9fe133387a43ec76e85801a7aa3104b2acc40b532a2a04e302eb7ef61286f3356197599aeee90aac1126f96770ca7e46368487396c0a3f1220cebf28933b616d'], ['97ba8ae0b510860271fca48ae0186794c94bc151bb11a2c615dee9fc4430a24f6aad1f70a3c1a382f6c071135922d39abdf12a69b11226a821583120a12ddb6b'], ['011983dd58f642e1e3046ab7251e021ad772f354ed0a93b575e18ca8a6c975e3ca94fe6dfee639ba7d513f3146b809a1705bb1ab8e9cf8100aa892229648a4fd']], '2538998815825281742767660886796155167233935943865621684451814391403465250311585509551017711102129066566146864811308294755149460823308127906396409734665388987648874815832627381517256402124625251481889892178084496244902135144010851256845168665019513846934111532241300081013968303958073788938297958245894161209968582733732377819974869829084665515969037715602458021587222983251458223740159181332201731544754054665343229604936640073570814573344051499447674346534931648810556779538990083455793003616158167762102353079436605025677223087145165368822265603534404596720331966618497848006200782274998077115438734178280308264149522230982398903319122236848561389426802899678248460727459186096612529669402748688987204655436462926669315566820526523699645726578511609570982280739622825970342696769264417958542020066946538356749380617932211797742208239978012366126590086880661770270729270557707009930270227901514201945627639279230978657460739'], [['3740829923987671902959795529034603056272814726731529326902414726447443220529131355144658828251544682999693036103899429449052381346246546070348766561328661337364727111881675092669402316183599531725903420605527629096548585475785943322173251840249242948992647011669141522566423139675172683972806636238555482713694545473917090478385493026257804903954471962337347229389630806146144228217095853105733662382921882757772189750245050244799376409976622471790019675845078047659058272284453865840799679031865423530958190633931395441020379299689816060324187020090812718985025273838988559266018238949344803043724452930420366776440541765979269497281456542638957699179196779672186134244901919446449393145051455839635284934302185971243493023663177855351704639679733195657937256515439626042178797789047716674754296067531902447556171861421397699589640844863740102494880996615919276179611409293280346845294655537465856272909051053915099992844999'], [['c284f1754deb88a38fd9288caebde9a2d97dd6c836718ac92dd8a59a2f137f44d08ba535c9f1e932a2f3ee0f65c246b1a7cb1abe11ab7e6e59013ba7a6fe0a9c'], ['4b0fafa47c53ef217dbbf434459218c620077d1f5f52a00250592ac8a55ffea982c41daf491f3a65610d56e52fc882bb23cf7ba74e8f8ee37ac44d054d55c341'], ['bee09d3e1e9f95edf539a0b8ef2ad88aa72b1832b9bcfd36895cb051d1fdd0cf2a8fce579790e3e8136d08260af754da266373521d21ac4a2efbf98aeaf2a6b1']], '459606206301342615175942835138413081888547857344959203415507307768482774613248245230570373591564567994340404048469252461034669109857139996168596893789525488259635215819469841961314823205075443162054375768191506247934530008795090218085434294177635379380851690208143611727606313551795437575580787493565029720308792250201411603086522472650295236507418037094647769099294575298665660379239449792484484002287388454501982785839740641045303593584599508116177241694729407781097109874971231044130637762776994734272005885328476459298626225947701956499758576608540874811999027613859825147779991590531002731528961357445214500375959902784747573130034181998082492805626553222537023498077417313312838152294167894545701135853095380866591583173704129738496123198650169681158387602826948310257659685032008766055007414584115755797574817860280590205986791344356092481630251967445918446364251430424550760695920541229063364236890805028493351393405'], [['1252789740988404123845962596725086267318400172518498369169547866781502930233501581712244628669335764246442482824148207936557880395244233882243524151828351283298832791911466430178987700677790057838273478990679845383221107764411861226245692596470862534474549574732886523795526463884868861706924853953511477724326307355814677157033348897256768830286225275277648120189163727885335867985656017557877388275913371853664932464794162657741123203123921478451323327474069541401400075251291305842972856454905361111678210196893571353393736735933485937540441403640104644395639197949963142571268405165904153048254824222615515283187523565941456316684251510030819812054236340178571441089463994415439685454641182017877273118827852651584855459309981362338053731791163719391977996500813440006751146881810748921762064128428129320692730673169814336577882397987188785955076809074280008867807653870026020281511921479417132554464276779541163126571594'], [['9f67ffc4a77dcdf75d8672ded7b533bd557f424181728489c34c16a71d4aabc473ba4fba69429a08f95d9f51b4c474ec3d9ec80c24b9e038c0e95c0e7997d8bc'], ['b75af31fea8d0a958f95f85dc1e78458c1f420ed4cdce960d923671790510ea419048f715e14b808849e3446962d2c53554580450d9a4f02927e7b133c015264'], ['e77a755ee8bf0e6f423243ac98734919b69b491164b5dbca16ec3f104cc9b3ef7ed5e9b1a20af066bb3ed9c2095922c57ad502c22dbe608551cb84d398d6fe8c']], '3924223019585799225507635965882715864661206769946647435544814146049186481576020228550541746821585825477624722729931343782788895961093053957336787851198120482229484230757422562666844312964037735338214090449151223073672202975953243057085573056016764511784707635573467097405957855247752519919605753210928043451035903676031182429424980899593078447620322999305368420320638579571012836825136214690808146132220218279377664067971607191779808702765229828556230890970658887008057349525997484324718839976473849996458900567474152142896180725184474972569103408184604062262760492811401463201426228336676965509750680098198733393318411277461582988104260819705423855747314358589213811128945266324823676074197601228792804627986119681205999922334895465387753405329246474683556946334763855445412658077587362196302248697607343652072981998014572271830138602475898075837890997765951424312075592214152710925811888042124384047561172551295234435776951']], 'timestamp': '16. Oct 2018 15:42:27', 'voterId': 0, 'ballot': {'x_hat': '2561117740318208691643329843082670215835865229061228731090516231134369340877725873977539812109114223748443088184674457698850890722846408658392966241056173640457206994643774839560325266954914865599308157208270101522456211566615106095976325151998397187040457995991040474233957332783791088439428561811261811977354590975828428677860201233582439772380120903856855362861368469368284982193506339449532487972085071244983349148363603514082012083910751435492596548405237759416700058614947599895724871053683589137183879129716179099569978619470323691561231315970890342205843252105725748406254803351186488076704814146452435046997872906305161080396843154941802040434165070693365379056341251752251001175514122683416485835621081517002700719660893546389946272223745742950267455909614242729614195810414246659883881252899047715073162717088672881033619205978248246917966548896441929080024739923399394652781298935677372113560799375871744823848030', 'a_bold': [['518460920798904338602631403269456958556087250035636788227841131312690201337423126741109159228262858677450698539804646020715159030904232408455232345817139860628931871534896109711667421532023942079052636279513244094054610871978901728647349080747192965680551485310306479525651054417691163857273548636844119008669698583242347655692270607160927668781159614526181415050190271585396404582055982126696110773110901885899629765528303928409968015710736871351888470119392646709757485320176062879028830909917850991061892952372219779834417311243151696887776630974819577535701117930295323410515272324878203809241384065154112993989985449008706654594106012950319243539578556278479017093341734722405110762181180542478334062128449072212056519886377697260401301183063480353636150680658891177956412747512542517539832125603509743163377934606024346096810117570079294542634876370921596492623113911959031739327100026321362895460373751606398194861294', '3101732690161449356742650592908116941229291206833242749954579254990577262773142764399348224313419774389055245140986997680694574239834964167851574680134957674242930995019955142231796548884646707269630244350366641355839404294275721280396092981224228358441047386567097492348272689041683974156568487144329482843626371697043916378107885570155384312257629194797182139708349193672124355537143247424774111122806389489370903190332619597869843473477120792295991436889621169258869043580302852938085298976969995762999076877061569622995685092585357744671182408179237348040131201380808360966132494707698698911575983840353498789827948538556145880250721983531798173275638868679130794216023872263678637156512990151360400344400865880556543298545539564953806273321451239268684623037838427120156447882286628084854203899597971209360626013022625157640159071773719153385678493734225755070970945588949855452080010419634877174205819894890828309064126']], 'pi': [['3632700862323378077815898906418336002560251830338855062817772855675602968945599335348681286748610084948260915076073325085658409294675995691058777072467664912026413263886833255406516718401833872176076928953523485191237156250708477579034707151613580208127104395251537390582647564380477548509681623003804894403824610537975236380969297602591143029655526447241160414049204776542515329701190200868563304400498242807096505617161037150743607278699446968985546670138625034217193131885950121252902386170570802382410894935165727162489241044555129149483110694546913483982674103844513822035534565343362257950198106448524954941715893281526805694576712546483794532002747458051892407935368802094981965730332070953204647407733400712230542101475454696045842708111234619907200020345399535533536093560017354117483056354639029745381777716607381945820378320555669270689416628417954287399609018844798792668221457334077042926170457179839546906856779', '976494565863327977676988530040362744788306296335332993533764314338931925055306522907524041790420758556073367872693907478091542173359963452079713135798790589481014380381416533233711196286335389968204818656090848672481422079543464234703056639229578081615216709093808566829998212994462951860656862310152312467431185526644558169465661426756319747638185971832241555507396259331879110859370841313950190876178922062074817084126689875811686479032231044796070673863683972323900194129187351391022158305397629241798238515030268726247203658368319431360477625640851176837696427641171070376198781923799193686503017500223249580608196961464778466514196824907845210253084946061341807463537367704903310470355605001987815187638192959145446548328904377106929698027737578584871390511274698113383301993008260308281912652264705005117164509068278542664667026979507105575126304352825545393659736342500513789055863366456760205712920041627113267361230', '3569211828038304480140786738644718591849014820401746687310181416507742121562425051293814893551852204225937396743143906153798582304551066885659483882577565709909873832495292555408342266159510297698158002252496581318052221734318607715839119810551316035832456031262800634820814912568760539221557442231758834591256852825275910368374105041267118005924469788529733338622349571971933221896314544114579834252360975395317245067030437584807194958239685019670733793759009872494158084627484723972184004273272298732744883568992917418809750016181595023413655428763683530702218146698391134608969367692193661841124399351341330850140451515244849199153730607676607509414743232274097090449325345772488104552772376826614928504945734646375830749997178503393731292653989783959285593847308894177909975205399081561439734016089119387157726324744142978898266844777832498373955871591731264085665240106497293748797828278868975841198737319135605565901276'], ['21345580246624678974385993985750615815160126354454116718224859113011541277375', '2448319314715969119603714142339380565092057061896156362023151506231983340340757429532031824729599698961348473907545144479342243209971992515351868727120593548874706952900656103571179810388695297784610069786594437148586841466166249144692407972170505290883053249941247608019665896407812873275236037462927221430023204941371066159944018669584057250646986512073593685408174579105978263593167571081541127054042326109422749865533669135589392874806524685708316499677899332115694901279678011106931848701674301454547231449117796590180074503670469441511262780092897290096141498548294797332224583848820223085709422962637960248944010761585778051176711533487764457285166066797211336980631422601190237894871927859838162048362132564933631023974487566180472427775391217201777976786272767407565072035077646024254433019020382811069881625046453870650442019507414586528665209346002452861676748216586264875551861626052181437535712888832968090820479', '1515123920188101567896721575448298731312809221195389960645661144127723063351612688313842223860659603792487756519325534488167386933708249841256131635200462151019680605828728978250634203177122145425146417240199299258139705069452671418006892828089791389930416826770289543691253496637977390157854628739309552731241714711270011977871082740379262377041884710241611005123397985853184890678825748606928298160709104726628841695089184264051590134844684591713745033290377359698213520515934284349999483623570614608269161828740437923976632892899345139986939357880121867774961221125080861431583190264092808845131912797402637992695343281601795801972097150657599426468049257328951265737471863693297206284935157616233325617859544664773717673468481143929452567201798881624919658202257749077478867697745244394547968298682370858186838006557147164702477340234185357851096113036559415432327595153610117331672252647266303668583710517030122028029828']]}, 'randomizations': ['1630600916637401031262359888649953887137301017547888551028897216576104361832306502829362434715457200233625853144950043330576459414613591381725874997912044365412421673916518449653379312380239429635485045932149299967739471662397952705158446687049141450565001937839600548384229959127979933960857451628927720815074895357711053788010619509675374564829315449345150145756767680759236349261444535196491616323659914626018510554607374381461666763074415408045619521457833688610551473566480898083992993512198753756639958891700215856738844952374750206651469787074526032514967302306340312561715427159528622239207747216949802187313518790440394692925596679935956269400548723750354516948440205128226092485723766076634143151012168436241748729154331085095735741457423994801414420166153586674773910958549985240190932652966434152961303051164599719084350634617098325684696118404915623353756027720862173765923940439943332484042673480559283366667982', '172985431213374429574681490821033561947003175649062444677677715446361070311596606892056814763449625642288012582552593679671820616038830010457188541090868078091707594427350992235971198587807820355787556738695620375874886314742414648144047650532192263304495857313477902293964536065277755917153067388533160647428196127533063940006548871741854945074844331291298094613573381751885765908408481879579222074790205465823789184556308278826610757389901298492721319262075930421969055385898040247780298697449494096975954096250228437714629919571060984068759996130104972213464525896127057855572536283407054010634350233279330726576251473228977131553434311870777499801476175865425777901295546331963784432385269555468275518376402258343405661127664075560743290699240953429238283790751925912398854915924537978981051332529829945032722947030934634691802650589096329772190451340215377225371563757710146230226046825299706844953942546420957995515873'], 'validity': 1},report)
        >>> res.test_result
        'successful'
        >>> res.test_data
        {'ballot': {'x_hat': '2561117740318208691643329843082670215835865229061228731090516231134369340877725873977539812109114223748443088184674457698850890722846408658392966241056173640457206994643774839560325266954914865599308157208270101522456211566615106095976325151998397187040457995991040474233957332783791088439428561811261811977354590975828428677860201233582439772380120903856855362861368469368284982193506339449532487972085071244983349148363603514082012083910751435492596548405237759416700058614947599895724871053683589137183879129716179099569978619470323691561231315970890342205843252105725748406254803351186488076704814146452435046997872906305161080396843154941802040434165070693365379056341251752251001175514122683416485835621081517002700719660893546389946272223745742950267455909614242729614195810414246659883881252899047715073162717088672881033619205978248246917966548896441929080024739923399394652781298935677372113560799375871744823848030', 'a_bold': [['518460920798904338602631403269456958556087250035636788227841131312690201337423126741109159228262858677450698539804646020715159030904232408455232345817139860628931871534896109711667421532023942079052636279513244094054610871978901728647349080747192965680551485310306479525651054417691163857273548636844119008669698583242347655692270607160927668781159614526181415050190271585396404582055982126696110773110901885899629765528303928409968015710736871351888470119392646709757485320176062879028830909917850991061892952372219779834417311243151696887776630974819577535701117930295323410515272324878203809241384065154112993989985449008706654594106012950319243539578556278479017093341734722405110762181180542478334062128449072212056519886377697260401301183063480353636150680658891177956412747512542517539832125603509743163377934606024346096810117570079294542634876370921596492623113911959031739327100026321362895460373751606398194861294', '3101732690161449356742650592908116941229291206833242749954579254990577262773142764399348224313419774389055245140986997680694574239834964167851574680134957674242930995019955142231796548884646707269630244350366641355839404294275721280396092981224228358441047386567097492348272689041683974156568487144329482843626371697043916378107885570155384312257629194797182139708349193672124355537143247424774111122806389489370903190332619597869843473477120792295991436889621169258869043580302852938085298976969995762999076877061569622995685092585357744671182408179237348040131201380808360966132494707698698911575983840353498789827948538556145880250721983531798173275638868679130794216023872263678637156512990151360400344400865880556543298545539564953806273321451239268684623037838427120156447882286628084854203899597971209360626013022625157640159071773719153385678493734225755070970945588949855452080010419634877174205819894890828309064126']], 'pi': [['3632700862323378077815898906418336002560251830338855062817772855675602968945599335348681286748610084948260915076073325085658409294675995691058777072467664912026413263886833255406516718401833872176076928953523485191237156250708477579034707151613580208127104395251537390582647564380477548509681623003804894403824610537975236380969297602591143029655526447241160414049204776542515329701190200868563304400498242807096505617161037150743607278699446968985546670138625034217193131885950121252902386170570802382410894935165727162489241044555129149483110694546913483982674103844513822035534565343362257950198106448524954941715893281526805694576712546483794532002747458051892407935368802094981965730332070953204647407733400712230542101475454696045842708111234619907200020345399535533536093560017354117483056354639029745381777716607381945820378320555669270689416628417954287399609018844798792668221457334077042926170457179839546906856779', '976494565863327977676988530040362744788306296335332993533764314338931925055306522907524041790420758556073367872693907478091542173359963452079713135798790589481014380381416533233711196286335389968204818656090848672481422079543464234703056639229578081615216709093808566829998212994462951860656862310152312467431185526644558169465661426756319747638185971832241555507396259331879110859370841313950190876178922062074817084126689875811686479032231044796070673863683972323900194129187351391022158305397629241798238515030268726247203658368319431360477625640851176837696427641171070376198781923799193686503017500223249580608196961464778466514196824907845210253084946061341807463537367704903310470355605001987815187638192959145446548328904377106929698027737578584871390511274698113383301993008260308281912652264705005117164509068278542664667026979507105575126304352825545393659736342500513789055863366456760205712920041627113267361230', '3569211828038304480140786738644718591849014820401746687310181416507742121562425051293814893551852204225937396743143906153798582304551066885659483882577565709909873832495292555408342266159510297698158002252496581318052221734318607715839119810551316035832456031262800634820814912568760539221557442231758834591256852825275910368374105041267118005924469788529733338622349571971933221896314544114579834252360975395317245067030437584807194958239685019670733793759009872494158084627484723972184004273272298732744883568992917418809750016181595023413655428763683530702218146698391134608969367692193661841124399351341330850140451515244849199153730607676607509414743232274097090449325345772488104552772376826614928504945734646375830749997178503393731292653989783959285593847308894177909975205399081561439734016089119387157726324744142978898266844777832498373955871591731264085665240106497293748797828278868975841198737319135605565901276'], ['21345580246624678974385993985750615815160126354454116718224859113011541277375', '2448319314715969119603714142339380565092057061896156362023151506231983340340757429532031824729599698961348473907545144479342243209971992515351868727120593548874706952900656103571179810388695297784610069786594437148586841466166249144692407972170505290883053249941247608019665896407812873275236037462927221430023204941371066159944018669584057250646986512073593685408174579105978263593167571081541127054042326109422749865533669135589392874806524685708316499677899332115694901279678011106931848701674301454547231449117796590180074503670469441511262780092897290096141498548294797332224583848820223085709422962637960248944010761585778051176711533487764457285166066797211336980631422601190237894871927859838162048362132564933631023974487566180472427775391217201777976786272767407565072035077646024254433019020382811069881625046453870650442019507414586528665209346002452861676748216586264875551861626052181437535712888832968090820479', '1515123920188101567896721575448298731312809221195389960645661144127723063351612688313842223860659603792487756519325534488167386933708249841256131635200462151019680605828728978250634203177122145425146417240199299258139705069452671418006892828089791389930416826770289543691253496637977390157854628739309552731241714711270011977871082740379262377041884710241611005123397985853184890678825748606928298160709104726628841695089184264051590134844684591713745033290377359698213520515934284349999483623570614608269161828740437923976632892899345139986939357880121867774961221125080861431583190264092808845131912797402637992695343281601795801972097150657599426468049257328951265737471863693297206284935157616233325617859544664773717673468481143929452567201798881624919658202257749077478867697745244394547968298682370858186838006557147164702477340234185357851096113036559415432327595153610117331672252647266303668583710517030122028029828']]}, 'publicKey': '2721018155699489411542213056148012074052548113726642889701705112755974737451318870255648939276536172308726828572986940131789368436613219844915287835481165590734761195639541435331051524855521854004971090570064778435633204661632995007204823589930770485222393106033645761082534695313982005400917478953969095109685517221834872259559238200644959055481991881762262704667193329088703278187372296350722554961668836448757383681843902280286615449697297915167726451728816189067203276968235029469858344878565257106922744103950443320762023379659397505592745669635791069760162432753771501779025429624848121258948522679005382255951348665467461363269408313071461569127288632157629560144718895730885155065571532713782441000584472697839126343544473577771121534155938149261811636395690149372622474785591950134351748590999532278350797080995783529620122118764546357338006914128794048621503454893219354071153072681922990346519642879590224417334562'}
        """
        self._notify("TestRunning")
        self.progress = 0
        key = self.key
        test_data = dict()
        try:
            ballot = election_data[key]
            test_data[key] = ballot
            pk_s = self.election_data['publicKey']
            test_data['publicKey'] = pk_s
            pi_s = ballot['pi'][0] #pi s as string array
            pi_t = ballot['pi'][1] #pi t as string array
            s=(mpz(pi_s[0]),mpz(pi_s[1]),mpz(pi_s[2]))
            t=(mpz(pi_t[0]),mpz(pi_t[1]),mpz(pi_t[2]))
            pi = BallotProof(s,t)
            a_bold = ballot['a_bold']
            a_bold_s = [[a_bold[x][y] for y in range(len(a_bold[0]))] for x in range(len(a_bold))]
            for i,item in enumerate(a_bold):
                for j,str in enumerate(item):
                    a_bold[i][j]= mpz(str)
            pk = mpz(pk_s)
            x_hat = mpz(ballot['x_hat'])
            res=CheckBallotProof(pi,x_hat,a_bold,pk,report.security_params)
            ballot['a_bold'] = a_bold_s
            self.progress = 1
            test_result = 'successful' if res else 'failed'
            return TestResult(self,test_result,test_data)
        except KeyError:
            self.progress = 1
            return TestResult(self,'skipped',test_data)

if __name__ == '__main__':
    import doctest
    from Report import Report
    from chvote.Common.SecurityParams import secparams_l1,secparams_l2,secparams_l3
    bpe_test = BallotProofEvidenceTest("1.1","TEST","TEST","ballot")
    bpe_test.election_data = {'publicKey':'2721018155699489411542213056148012074052548113726642889701705112755974737451318870255648939276536172308726828572986940131789368436613219844915287835481165590734761195639541435331051524855521854004971090570064778435633204661632995007204823589930770485222393106033645761082534695313982005400917478953969095109685517221834872259559238200644959055481991881762262704667193329088703278187372296350722554961668836448757383681843902280286615449697297915167726451728816189067203276968235029469858344878565257106922744103950443320762023379659397505592745669635791069760162432753771501779025429624848121258948522679005382255951348665467461363269408313071461569127288632157629560144718895730885155065571532713782441000584472697839126343544473577771121534155938149261811636395690149372622474785591950134351748590999532278350797080995783529620122118764546357338006914128794048621503454893219354071153072681922990346519642879590224417334562'}
    doctest.testmod(extraglobs = {'bpet': bpe_test, 'report': Report('id',secparams_l3)})
